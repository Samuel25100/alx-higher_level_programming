class BaseGeometry
Public instance method: def area(self): that raises an Exception with the message area() is not implemented
Public instance method: def integer_validator(self, name, value): that validates value:
you can assume name is always a string
if value is not an integer: raise a TypeError exception, with the message <name> must be an integer
if value is less or equal to 0: raise a ValueError exception with the message <name> must be greater than 0
=====================================================================
Importing modules
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Checking on normal case
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("Area", 26)
	>>> bg.integer_validator("Size", 62)

Using non-integer
	>>> non_in = BaseGeometry()
	>>> non_in.integer_validator("Area", "str")
	Traceback (most recent call last):
		...
	TypeError: Area must be an integer
	
	>>> non_in.integer_validator("Area", "78")
	Traceback (most recent call last):
		...
	TypeError: Area must be an integer

	>>> non_in.integer_validator("name", True)
	Traceback (most recent call last):
		...
	TypeError: name must be an integer
	
	>>> non_in.integer_validator("Area", 4.5)
	Traceback (most recent call last):
		...
	TypeError: Area must be an integer

Using negative int
	>>> neg_in = BaseGeometry()
	>>> neg_in.integer_validator("name", -67)
	Traceback (most recent call last):
		...
	ValueError: name must be greater than 0
	>>> neg_in.integer_validator("name", 0)
	Traceback (most recent call last):
		...
	ValueError: name must be greater than 0

Passing argument in wrong way
	>>> neg_in.integer_validator("name")
	Traceback (most recent call last):
		...
	TypeError: integer_validator() missing 1 required positional argument: 'value'

	>>> neg_in.integer_validator()
	Traceback (most recent call last):
		...
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Checking area method
	>>> bg = BaseGeometry()
	>>> bg.area(5)
	Traceback (most recent call last):
		...
	TypeError: area() takes 1 positional argument but 2 were given
	>>> bg.area(5, 5)
	Traceback (most recent call last):
		...
	TypeError: area() takes 1 positional argument but 3 were given

